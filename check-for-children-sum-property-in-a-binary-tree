#include<iostream>

using namespace std;

struct node{
	int data;
	node *left, *right;
};

node *newNode(int data){
	node *temp = new node;
	temp->left = temp->right = NULL;
	temp->data = data;

	return temp;
}

bool childSum(node *root){
	if (root==NULL) return 1;

	if (root->left==NULL && root->right==NULL) return 1;
	else{

	   int left = 0, right = 0;

	   if (root->left!=NULL){
	      left = root->left->data;
	   }
	   if (root->right!=NULL){
	      right = root->right->data;
	   }
	   if (root->data == left + right) return 1 && childSum(root->left) && childSum(root->right);
	   else return 0 && childSum(root->left) && childSum(root->right);
	}

}

int main(){
	node *root = newNode(10);
	root->left         = newNode(8);
	root->right        = newNode(2);
	root->left->left   = newNode(3);
	root->left->right  = newNode(5);
	root->right->right = newNode(2);

	if (childSum(root)){
	   cout << "This tree satisfies the condition";
	}
	else{
	   cout << "No it doesn't satisfies the condition";
	}

	return 0;
}